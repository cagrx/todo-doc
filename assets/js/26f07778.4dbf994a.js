"use strict";(self.webpackChunktodo_doc=self.webpackChunktodo_doc||[]).push([[8094],{5137:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>d,toc:()=>c});const d=JSON.parse('{"id":"level1/auth/authentication/add-userid-db","title":"Add User ID to the Database","description":"Let\'s add a user_id field to our todos table in the database.","source":"@site/docs/level1/auth/authentication/add-userid-db.md","sourceDirName":"level1/auth/authentication","slug":"/level1/auth/authentication/add-userid-db","permalink":"/todo-doc/docs/level1/auth/authentication/add-userid-db","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":20,"frontMatter":{"sidebar_label":"Add User ID to the Database","sidebar_position":20},"sidebar":"tutorialSidebar","previous":{"title":"Securing API Routes","permalink":"/todo-doc/docs/level1/auth/authentication/middleware"},"next":{"title":"Support Create","permalink":"/todo-doc/docs/level1/auth/authentication/support-create"}}');var o=n(4848),a=n(8453);const s={sidebar_label:"Add User ID to the Database",sidebar_position:20},r="Add User ID to the Database",i={},c=[];function l(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"add-user-id-to-the-database",children:"Add User ID to the Database"})}),"\n",(0,o.jsxs)(t.p,{children:["Let's add a ",(0,o.jsx)(t.code,{children:"user_id"})," field to our ",(0,o.jsx)(t.code,{children:"todos"})," table in the database."]}),"\n",(0,o.jsxs)(t.p,{children:["We'll make it ",(0,o.jsx)(t.code,{children:"varchar(255)"})," to support the user ids provided by Firebase Auth."]}),"\n",(0,o.jsxs)(t.p,{children:["We'll also make it ",(0,o.jsx)(t.code,{children:"NOT NULL"})," because we want every ",(0,o.jsx)(t.code,{children:"todo"})," to have a ",(0,o.jsx)(t.code,{children:"user_id"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["You may need to delete all the existing ",(0,o.jsx)(t.code,{children:"todo"}),"s or update them with non-null ",(0,o.jsx)(t.code,{children:"user_id"}),"s in order to make the change to the table."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-sql",children:"SET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n---\n\n-- Table structure for todos\n\n---\n\nDROP TABLE IF EXISTS `todos`;\nCREATE TABLE `todos` (\n`id` int NOT NULL AUTO_INCREMENT,\n`user_id` varchar(255) NOT NULL,\n`name` varchar(255) NOT NULL,\n`is_done` bigint DEFAULT '0',\n`sort_order` bigint DEFAULT '-1',\nPRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=13479 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;\n\nSET FOREIGN_KEY_CHECKS = 1;\n\n"})})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var d=n(6540);const o={},a=d.createContext(o);function s(e){const t=d.useContext(a);return d.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),d.createElement(a.Provider,{value:t},e.children)}}}]);